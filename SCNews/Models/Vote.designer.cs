#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCNews.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C300335_starcraftmd_dev")]
	public partial class VoteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVoteAnswer(VoteAnswer instance);
    partial void UpdateVoteAnswer(VoteAnswer instance);
    partial void DeleteVoteAnswer(VoteAnswer instance);
    partial void InsertVoteByUser(VoteByUser instance);
    partial void UpdateVoteByUser(VoteByUser instance);
    partial void DeleteVoteByUser(VoteByUser instance);
    partial void InsertVote(Vote instance);
    partial void UpdateVote(Vote instance);
    partial void DeleteVote(Vote instance);
    partial void InsertVoteUser(VoteUser instance);
    partial void UpdateVoteUser(VoteUser instance);
    partial void DeleteVoteUser(VoteUser instance);
    #endregion
		
		public VoteDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["C300335_starcraftmd_devConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VoteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VoteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VoteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VoteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VoteAnswer> VoteAnswers
		{
			get
			{
				return this.GetTable<VoteAnswer>();
			}
		}
		
		public System.Data.Linq.Table<VoteByUser> VoteByUsers
		{
			get
			{
				return this.GetTable<VoteByUser>();
			}
		}
		
		public System.Data.Linq.Table<Vote> Votes
		{
			get
			{
				return this.GetTable<Vote>();
			}
		}
		
		public System.Data.Linq.Table<VoteUser> VoteUsers
		{
			get
			{
				return this.GetTable<VoteUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="C300335_starcraftmd.VoteAnswers")]
	public partial class VoteAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_n;
		
		private long _vote_id;
		
		private string _answer_text;
		
		private EntityRef<Vote> _Vote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_nChanging(int value);
    partial void Onorder_nChanged();
    partial void Onvote_idChanging(long value);
    partial void Onvote_idChanged();
    partial void Onanswer_textChanging(string value);
    partial void Onanswer_textChanged();
    #endregion
		
		public VoteAnswer()
		{
			this._Vote = default(EntityRef<Vote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_n", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_n
		{
			get
			{
				return this._order_n;
			}
			set
			{
				if ((this._order_n != value))
				{
					this.Onorder_nChanging(value);
					this.SendPropertyChanging();
					this._order_n = value;
					this.SendPropertyChanged("order_n");
					this.Onorder_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long vote_id
		{
			get
			{
				return this._vote_id;
			}
			set
			{
				if ((this._vote_id != value))
				{
					if (this._Vote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvote_idChanging(value);
					this.SendPropertyChanging();
					this._vote_id = value;
					this.SendPropertyChanged("vote_id");
					this.Onvote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_text", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string answer_text
		{
			get
			{
				return this._answer_text;
			}
			set
			{
				if ((this._answer_text != value))
				{
					this.Onanswer_textChanging(value);
					this.SendPropertyChanging();
					this._answer_text = value;
					this.SendPropertyChanged("answer_text");
					this.Onanswer_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vote_VoteAnswer", Storage="_Vote", ThisKey="vote_id", OtherKey="id", IsForeignKey=true)]
		public Vote Vote
		{
			get
			{
				return this._Vote.Entity;
			}
			set
			{
				Vote previousValue = this._Vote.Entity;
				if (((previousValue != value) 
							|| (this._Vote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vote.Entity = null;
						previousValue.VoteAnswers.Remove(this);
					}
					this._Vote.Entity = value;
					if ((value != null))
					{
						value.VoteAnswers.Add(this);
						this._vote_id = value.id;
					}
					else
					{
						this._vote_id = default(long);
					}
					this.SendPropertyChanged("Vote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="C300335_starcraftmd.VoteByUsers")]
	public partial class VoteByUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _user_id;
		
		private long _vote_id;
		
		private int _answer_n;
		
		private EntityRef<VoteUser> _VoteUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Onvote_idChanging(long value);
    partial void Onvote_idChanged();
    partial void Onanswer_nChanging(int value);
    partial void Onanswer_nChanged();
    #endregion
		
		public VoteByUser()
		{
			this._VoteUser = default(EntityRef<VoteUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._VoteUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long vote_id
		{
			get
			{
				return this._vote_id;
			}
			set
			{
				if ((this._vote_id != value))
				{
					this.Onvote_idChanging(value);
					this.SendPropertyChanging();
					this._vote_id = value;
					this.SendPropertyChanged("vote_id");
					this.Onvote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_n", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int answer_n
		{
			get
			{
				return this._answer_n;
			}
			set
			{
				if ((this._answer_n != value))
				{
					this.Onanswer_nChanging(value);
					this.SendPropertyChanging();
					this._answer_n = value;
					this.SendPropertyChanged("answer_n");
					this.Onanswer_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteUser_VoteByUser", Storage="_VoteUser", ThisKey="user_id", OtherKey="UserId", IsForeignKey=true)]
		public VoteUser VoteUser
		{
			get
			{
				return this._VoteUser.Entity;
			}
			set
			{
				VoteUser previousValue = this._VoteUser.Entity;
				if (((previousValue != value) 
							|| (this._VoteUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoteUser.Entity = null;
						previousValue.VoteByUsers.Remove(this);
					}
					this._VoteUser.Entity = value;
					if ((value != null))
					{
						value.VoteByUsers.Add(this);
						this._user_id = value.UserId;
					}
					else
					{
						this._user_id = default(System.Guid);
					}
					this.SendPropertyChanged("VoteUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="C300335_starcraftmd.Votes")]
	public partial class Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _question_name;
		
		private string _question_text;
		
		private int _status;
		
		private bool _is_pinned;
		
		private System.Guid _created_by;
		
		private System.DateTime _created_at;
		
		private EntitySet<VoteAnswer> _VoteAnswers;
		
		private EntityRef<VoteUser> _VoteUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onquestion_nameChanging(string value);
    partial void Onquestion_nameChanged();
    partial void Onquestion_textChanging(string value);
    partial void Onquestion_textChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onis_pinnedChanging(bool value);
    partial void Onis_pinnedChanged();
    partial void Oncreated_byChanging(System.Guid value);
    partial void Oncreated_byChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    #endregion
		
		public Vote()
		{
			this._VoteAnswers = new EntitySet<VoteAnswer>(new Action<VoteAnswer>(this.attach_VoteAnswers), new Action<VoteAnswer>(this.detach_VoteAnswers));
			this._VoteUser = default(EntityRef<VoteUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string question_name
		{
			get
			{
				return this._question_name;
			}
			set
			{
				if ((this._question_name != value))
				{
					this.Onquestion_nameChanging(value);
					this.SendPropertyChanging();
					this._question_name = value;
					this.SendPropertyChanged("question_name");
					this.Onquestion_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_text", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string question_text
		{
			get
			{
				return this._question_text;
			}
			set
			{
				if ((this._question_text != value))
				{
					this.Onquestion_textChanging(value);
					this.SendPropertyChanging();
					this._question_text = value;
					this.SendPropertyChanged("question_text");
					this.Onquestion_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_pinned", DbType="Bit NOT NULL")]
		public bool is_pinned
		{
			get
			{
				return this._is_pinned;
			}
			set
			{
				if ((this._is_pinned != value))
				{
					this.Onis_pinnedChanging(value);
					this.SendPropertyChanging();
					this._is_pinned = value;
					this.SendPropertyChanged("is_pinned");
					this.Onis_pinnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					if (this._VoteUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vote_VoteAnswer", Storage="_VoteAnswers", ThisKey="id", OtherKey="vote_id")]
		public EntitySet<VoteAnswer> VoteAnswers
		{
			get
			{
				return this._VoteAnswers;
			}
			set
			{
				this._VoteAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteUser_Vote", Storage="_VoteUser", ThisKey="created_by", OtherKey="UserId", IsForeignKey=true)]
		public VoteUser VoteUser
		{
			get
			{
				return this._VoteUser.Entity;
			}
			set
			{
				VoteUser previousValue = this._VoteUser.Entity;
				if (((previousValue != value) 
							|| (this._VoteUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoteUser.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._VoteUser.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._created_by = value.UserId;
					}
					else
					{
						this._created_by = default(System.Guid);
					}
					this.SendPropertyChanged("VoteUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoteAnswers(VoteAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Vote = this;
		}
		
		private void detach_VoteAnswers(VoteAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Vote = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="aspnet_Users")]
	public partial class VoteUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<VoteByUser> _VoteByUsers;
		
		private EntitySet<Vote> _Votes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public VoteUser()
		{
			this._VoteByUsers = new EntitySet<VoteByUser>(new Action<VoteByUser>(this.attach_VoteByUsers), new Action<VoteByUser>(this.detach_VoteByUsers));
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteUser_VoteByUser", Storage="_VoteByUsers", ThisKey="UserId", OtherKey="user_id")]
		public EntitySet<VoteByUser> VoteByUsers
		{
			get
			{
				return this._VoteByUsers;
			}
			set
			{
				this._VoteByUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteUser_Vote", Storage="_Votes", ThisKey="UserId", OtherKey="created_by")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoteByUsers(VoteByUser entity)
		{
			this.SendPropertyChanging();
			entity.VoteUser = this;
		}
		
		private void detach_VoteByUsers(VoteByUser entity)
		{
			this.SendPropertyChanging();
			entity.VoteUser = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.VoteUser = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.VoteUser = null;
		}
	}
}
#pragma warning restore 1591
